version: '2'
services:
  ontology_broker:
    build: 
      context: ./ontology_broker
    env_file:
      - ontology_manager.env
    volumes:
      - ./amqp_utils:/usr/src/app/amqp_utils
      - ./neo4j_utils:/usr/src/app/neo4j_utils
      - ./sro_utils:/usr/src/app/sro_utils
      - ./logs/ontology_broker:/usr/src/app/logs
    links:
      - graphdb
      - mongodb
      - rabbitmq
      - mongosetup
    restart: always
  
  concept_processor:
    build: ./ontology_processors/percp_scope_1.concepts
    env_file:
      - ontology_manager.env
    volumes: 
      - ./amqp_utils:/usr/src/app/amqp_utils
      - ./neo4j_utils:/usr/src/app/neo4j_utils
      - ./sro_utils:/usr/src/app/sro_utils
      - ./logs/concept_processor:/usr/src/app/logs      
    depends_on:
      - ontology_broker
    links:
      - graphdb
      - mongodb
      - rabbitmq
    restart: always

  questions_processor:
    build: ./ontology_processors/percp_scope_1.questions
    env_file:
      - ontology_manager.env
    volumes: 
      - ./amqp_utils:/usr/src/app/amqp_utils
      - ./neo4j_utils:/usr/src/app/neo4j_utils
      - ./sro_utils:/usr/src/app/sro_utils
      - ./logs/concept_processor:/usr/src/app/logs      
    depends_on:
      - ontology_broker
    links:
      - graphdb
      - mongodb
      - rabbitmq
    restart: always 

  content_processor:
    build: ./ontology_processors/percp_scope_1.media_content
    env_file:
      - ontology_manager.env
    volumes: 
      - ./amqp_utils:/usr/src/app/amqp_utils
      - ./neo4j_utils:/usr/src/app/neo4j_utils
      - ./sro_utils:/usr/src/app/sro_utils
      - ./logs/concept_processor:/usr/src/app/logs
    depends_on:
      - ontology_broker
    links:
      - graphdb
      - mongodb
      - rabbitmq
    restart: always

  user_processor:
    build: ./ontology_processors/percp_scope_1.user
    env_file:
      - ontology_manager.env
    volumes: 
      - ./amqp_utils:/usr/src/app/amqp_utils
      - ./neo4j_utils:/usr/src/app/neo4j_utils
      - ./sro_utils:/usr/src/app/sro_utils
      - ./logs/concept_processor:/usr/src/app/logs
    depends_on:
      - ontology_broker
    links:
      - graphdb
      - mongodb
      - rabbitmq
    restart: always

  learner_state_processor:
    build: ./ontology_processors/percp_scope_1.learner_state
    env_file:
      - ontology_manager.env
    volumes: 
      - ./amqp_utils:/usr/src/app/amqp_utils
      - ./neo4j_utils:/usr/src/app/neo4j_utils
      - ./sro_utils:/usr/src/app/sro_utils
      - ./logs/concept_processor:/usr/src/app/logs
    depends_on:
      - ontology_broker
    links:
      - graphdb
      - mongodb
      - rabbitmq
    restart: always

  learning_resource_processor:
    build: ./ontology_processors/percp_scope_1.learning_resource
    env_file:
      - ontology_manager.env
    volumes: 
      - ./amqp_utils:/usr/src/app/amqp_utils
      - ./neo4j_utils:/usr/src/app/neo4j_utils
      - ./sro_utils:/usr/src/app/sro_utils
      - ./logs/concept_processor:/usr/src/app/logs
    depends_on:
      - ontology_broker
    links:
      - graphdb
      - mongodb
      - rabbitmq
    restart: always
  
  questions_processor:
    build: ./ontology_processors/percp_scope_1.questions
    env_file:
      - ontology_manager.env
    volumes: 
      - ./amqp_utils:/usr/src/app/amqp_utils
      - ./neo4j_utils:/usr/src/app/neo4j_utils
      - ./sro_utils:/usr/src/app/sro_utils
      - ./logs/concept_processor:/usr/src/app/logs      
    depends_on:
      - ontology_broker
    links:
      - graphdb
      - mongodb
      - rabbitmq
    restart: always
  
  course_processor:
    build: ./ontology_processors/percp_scope_1.course
    env_file:
      - ontology_manager.env
    volumes:
      - ./amqp_utils:/usr/src/app/amqp_utils
      - ./neo4j_utils:/usr/src/app/neo4j_utils
      - ./sro_utils:/usr/src/app/sro_utils
      - ./logs/concept_processor:/usr/src/app/logs
    depends_on:
      - ontology_broker
    links:
      - graphdb
      - mongodb
      - rabbitmq
    restart: always

  node_factory:
    build: ./ontology_processors/node_factory
    env_file:
      - ontology_manager.env
    volumes: 
      - ./amqp_utils:/usr/src/app/amqp_utils
      - ./neo4j_utils:/usr/src/app/neo4j_utils
      - ./sro_utils:/usr/src/app/sro_utils
      - ./logs/node_factory:/usr/src/app/logs      
    depends_on:
      - concept_processor
    links:
      - graphdb
      - mongodb
      - rabbitmq
    restart: always

  relation_factory:
    build: ./ontology_processors/relation_factory
    env_file:
      - ontology_manager.env
    volumes: 
      - ./amqp_utils:/usr/src/app/amqp_utils
      - ./neo4j_utils:/usr/src/app/neo4j_utils
      - ./sro_utils:/usr/src/app/sro_utils
      - ./logs/relation_factory:/usr/src/app/logs      
    depends_on:
      - concept_processor
    links: 
      - graphdb
      - mongodb
      - rabbitmq
    restart: always
  
  graphdb:
    image: neo4j:latest
    environment:
     - NEO4J_AUTH=neo4j/password
     - NEO4J_CACHE_MEMORY=1G
     - NEO4J_dbms_security_procedures_unrestricted=apoc.*
     - NEO4J_dbms_memory_pagecache_size=4G
    volumes:
     - ./db/dbms:/data/dbms
     - ./plugins:/plugins
     - ./logs/graphdb:/logs
    ports:
     - "7474:7474"
     - "7687:7687"
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    restart: always

  mongodb:
    image: mongo:latest
    hostname: mongodb
    entrypoint: ["/usr/bin/mongod", "--replSet", "rs"]
    ports:
     - "27017:27017"
     - "28017:28017"
    restart: always
    
  mongosetup:
    image: mongo:latest
    depends_on:
     - mongodb
    volumes:
     - ./scripts:/scripts
     - ./dump:/dump
     - ./dump_backup_2:/dump_backup_2
    entrypoint: ["scripts/mongosetup.sh"]

  rabbitmq:
    image: rabbitmq:management
    ports:
     - "5672:5672"
     - "15672:15672"
    restart: always